package com.engine.mnsfz.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

<<<<<<< HEAD
import com.engine.mnsfz.greendao.PersonImage;

import com.engine.mnsfz.greendao.PersonImageDao;
=======
import com.engine.mnsfz.greendao.ImageBean;
import com.engine.mnsfz.greendao.ModelBean;

import com.engine.mnsfz.greendao.ImageBeanDao;
import com.engine.mnsfz.greendao.ModelBeanDao;
>>>>>>> b2726ae215183b4e84a074f89d8a3adf1aad13c5

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

<<<<<<< HEAD
    private final DaoConfig personImageDaoConfig;

    private final PersonImageDao personImageDao;
=======
    private final DaoConfig imageBeanDaoConfig;
    private final DaoConfig modelBeanDaoConfig;

    private final ImageBeanDao imageBeanDao;
    private final ModelBeanDao modelBeanDao;
>>>>>>> b2726ae215183b4e84a074f89d8a3adf1aad13c5

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

<<<<<<< HEAD
        personImageDaoConfig = daoConfigMap.get(PersonImageDao.class).clone();
        personImageDaoConfig.initIdentityScope(type);

        personImageDao = new PersonImageDao(personImageDaoConfig, this);

        registerDao(PersonImage.class, personImageDao);
    }
    
    public void clear() {
        personImageDaoConfig.getIdentityScope().clear();
    }

    public PersonImageDao getPersonImageDao() {
        return personImageDao;
=======
        imageBeanDaoConfig = daoConfigMap.get(ImageBeanDao.class).clone();
        imageBeanDaoConfig.initIdentityScope(type);

        modelBeanDaoConfig = daoConfigMap.get(ModelBeanDao.class).clone();
        modelBeanDaoConfig.initIdentityScope(type);

        imageBeanDao = new ImageBeanDao(imageBeanDaoConfig, this);
        modelBeanDao = new ModelBeanDao(modelBeanDaoConfig, this);

        registerDao(ImageBean.class, imageBeanDao);
        registerDao(ModelBean.class, modelBeanDao);
    }
    
    public void clear() {
        imageBeanDaoConfig.getIdentityScope().clear();
        modelBeanDaoConfig.getIdentityScope().clear();
    }

    public ImageBeanDao getImageBeanDao() {
        return imageBeanDao;
    }

    public ModelBeanDao getModelBeanDao() {
        return modelBeanDao;
>>>>>>> b2726ae215183b4e84a074f89d8a3adf1aad13c5
    }

}
